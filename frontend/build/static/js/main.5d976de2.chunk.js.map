{"version":3,"sources":["components/layout.js","components/selector.js","components/fetcher.js","components/toolTip.js","components/plotControl.js","components/charter.js","utils.js","context.js","components/trendChart.js","components/employerChart.js","components/educationChart.js","components/cardList.js","components/topListCard.js","components/modal.js","components/topList.js","components/topOccupations.js","components/topSkills.js","components/skillRankTrend.js","components/skillComposition.js","components/clusterChart.js","components/clusterComposition.js","components/radarChart.js","components/chartLayout.js","components/navBar.js","App.js","index.js"],"names":["Layout","withStyles","theme","root","display","flexDirection","alignItems","margins","Object","objectSpread","mixins","gutters","marginTop","spacing","unit","section","props","classNames","require","react_default","a","createElement","className","classes","children","map","child","index","key","RowLayout","width","justifyContent","selector","TextField","assign","select","TextFieldProps","options","length","_ref","value","label","MenuItem","Fetch","url","render","console","log","_useAxios","useAxios","_useAxios2","slicedToArray","_useAxios2$","data","loading","error","refetch","style","color","tooltip","backgroundColor","fontSize","typography","pxToRem","objectWithoutProperties","Tooltip","PlotTitle","Typography","variant","ModalIcon","paddingLeft","_ref2","toolTip","title","toolTipText","placement","interactive","leaveDelay","src","alt","placing","paddingBottom","alignSelf","input","marginRight","marginLeft","_ref3","plotControl_PlotTitle","Paper","elevation","react_plotly_default","range","start","stop","step","arguments","undefined","h","Math","floor","Array","fill","n","i","findURLFromCollection","arr","rel","find","href","CollectionsContext","React","createContext","TopListCardContext","trendChart","Consumer","_","TrendChart","jsonResp","BgtoccTrendChart","layout","traces","useMemo","country","name","x","year","y","percentage","marker","symbol","size","type","mode","charter","_useState","useState","_links","_useState2","setValue","item","bgtocc","replace","concat","bgtocc_hash","plotControl","helperText","onChange","e","target","_ref4","height","xaxis","text","tickmode","tickvals","yaxis","legend","orientation","StyledEmployersChart","args","limit","markerColors","chroma","colors","Employer","job_postings","sector","tickfont","categoryorder","categoryarray","category_array","reverse","barmode","margin","l","employerChart","StyledEducationChart","Education","Experience","num_of_jobs","educationChart","cardList","List","dense","Fragment","rank","Divider","description","ListItem","divider","ListItemText","primary","primaryTypographyProps","noWrap","gutterBottom","marginBottom","headline","paddingTop","button","textTransform","list","flexBasis","cardTitle","renderMore","open","setOpen","seeMoreURL","Button","onClick","Dialog","onClose","maxWidth","modal","modalTitle","DialogContent","DialogTitle","disableTypography","align","filter","TopList","fieldName","_args$limit","limitMore","Provider","groupBy","entries","groupByAndChunk","dataChunk","topListCard","seeMoreUrl","topOccupations","topList","topSkills","toConsumableArray","scale","StyledSkillRank","_useState3","_useState4","setLayout","base_year","draftTrace","legendgroup","useEffect","yaxis2","showgrid","showline","ticks","autorange","rangemode","zerolinecolor","xaxis2","draftLayout","tracegroupgap","font","grid","rows","columns","pattern","value_field","skillRankTrend","SkillCompositionChart","job_postings_skill","skill_name","arrangement","flatMap","domain","StyledSkillComposition","inputContainer","dropDown","bgtocc_name_hash","bgtoccValue","setBgtoccValue","_useState5","skill_types","_useState6","skillTypeValue","setSkillTypeValue","_useState7","_useState8","limitValue","setLimitValue","bgtoccOptions","skillTypeOptions","skill_type","limitOptions","lim","skillComposition","StyledClusterChart","padding","info","zip","prevalence","round","component_1","component_2","textposition","sizemode","sizeref","hovertemplate","textfont","hovermode","clusterChart","ClusterCompositionChart","shorterName","s","maxLen","RegExp","shorten","term_frequency","pseudocount","StyledClusterComposition","inputField","sliderLabel","sliderSpacing","_ref$jsonResp","setURL","clusterLabel","setClusterLabel","lambda","setLambda","min","max","apply","Slider","defaultValue","onChangeCommitted","newValue","valueLabelDisplay","clusterComposition","StyledRadarChart","cluster_label","probability","radarChart","tab","setTab","AppBar","position","Tabs","event","centered","Tab","useStyles","makeStyles","flexGrow","icon","brand","Navigation","Toolbar","sectorTitle","AppLayout","id","navBar","collections","chartLayout","App","App_AppLayout","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5d976de2.chunk.js","sourcesContent":["import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nexport const Layout = withStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  margins: {\n    ...theme.mixins.gutters(),\n    marginTop: theme.spacing.unit * 2\n  },\n  section: {}\n}))(props => {\n  const classNames = require(\"classnames\");\n  return (\n    <div className={classNames(props.classes.root, props.className)}>\n      {props.children.map((child, index) => (\n        <div\n          className={classNames(props.classes.section, props.classes.margins)}\n          key={index}\n        >\n          {child}\n        </div>\n      ))}\n    </div>\n  );\n});\n\nexport const RowLayout = withStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    width: \"1200px\",\n    justifyContent: \"space-between\"\n  },\n  section: {}\n}))(props => (\n  <div className={props.classes.root}>\n    {props.children.map((child, index) => (\n      <div key={index} className={props.classes.section}>\n        {child}\n      </div>\n    ))}\n  </div>\n));\n","import React from \"react\";\nimport { TextField, MenuItem } from \"@material-ui/core\";\n\nexport default props => (\n  <TextField select {...props.TextFieldProps}>\n    {props.options.length > 0 ? (\n      props.options.map(({ value, key, label }) => (\n        <MenuItem key={key} value={value}>\n          {label}\n        </MenuItem>\n      ))\n    ) : (\n        <MenuItem />\n      )}\n  </TextField>\n);\n","import React from \"react\";\nimport useAxios from \"axios-hooks\";\n\nexport default function Fetch({ url, render }) {\n  console.log(url);\n\n  const [{ data, loading, error }, refetch] = useAxios(url);\n\n  console.log(data);\n\n  if (loading) return \"loading...\";\n  if (error) return <div style={{ color: \"red\" }}> {\"Error!\"} </div>;\n  return render(data, refetch);\n}\n","import React from \"react\";\nimport { Tooltip, withStyles } from \"@material-ui/core\";\n\nconst style = theme => ({\n  tooltip: {\n    backgroundColor: \"#f5f5f9\",\n    color: \"black\",\n    fontSize: theme.typography.pxToRem(12)\n  }\n});\n\nfunction MyTooltip({ classes, ...props }) {\n  return <Tooltip {...props} classes={{ tooltip: classes.tooltip }} />;\n}\n\nexport default withStyles(style)(MyTooltip);\n","import React from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Tooltip from \"./toolTip\";\n\nconst PlotTitle = ({ children, ...props }) => (\n  <Typography {...props} variant=\"subtitle2\">\n    {children}\n  </Typography>\n);\n\nconst ModalIcon = withStyles(theme => ({\n  root: {\n    paddingLeft: \"8px\"\n  }\n}))(({ classes, ...props }) => {\n  let classNames = require(\"classnames\");\n  return (\n    <Tooltip\n      title={props.toolTipText}\n      placement=\"top\"\n      classes={{ tooltip: classes.toolTip }}\n      interactive={true}\n      leaveDelay={1000}\n    >\n      <i className={classNames(classes.root, props.className)}>\n        <img src=\"/assets/tooltip.png\" alt=\"tooltip\" width=\"15px\" />\n      </i>\n    </Tooltip>\n  );\n});\n\nexport default withStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  placing: {\n    paddingBottom: \"10px\",\n    alignSelf: \"flex-end\"\n  },\n  input: {\n    marginTop: theme.spacing.unit * 2,\n    marginRight: theme.spacing.unit * 2,\n    marginLeft: \"auto\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    paddingBottom: \"10px\"\n  }\n}))(function PlotControl({ classes, ...props }) {\n  let { root, placing, input } = classes;\n  return (\n    <div className={root}>\n      <PlotTitle className={placing}>{props.title}</PlotTitle>\n      <ModalIcon className={placing} {...props} />\n      <div className={input}> {props.children} </div>\n    </div>\n  );\n});\n","import React from \"react\";\nimport { Paper, withStyles } from \"@material-ui/core\";\nimport Plot from \"react-plotly.js\";\n\nconst style = {\n  root: { display: \"flex\", justifyContent: \"flex-end\" }\n};\n\nfunction Chart({ classes, ...props }) {\n  let classNames = require(\"classnames\");\n  return (\n    <Paper elevation={2} className={classNames(classes.root, props.className)}>\n      <Plot {...props} />\n    </Paper>\n  );\n}\n\nexport default withStyles(style)(Chart);\n","export function range(start, stop, step = 1) {\n  let h = Math.floor((stop - start) / step);\n  return Array(h)\n    .fill(start)\n    .map((n, i) => n + i * step);\n}\n\nexport function findURLFromCollection(arr, rel) {\n  let find = require(\"lodash.find\");\n  return find(arr, { rel }).href;\n}\n\nexport function groupByAndChunk(arr, key) {\n  let groupBy = require(\"lodash.groupby\");\n  return Object.entries(groupBy(arr, key));\n}\n\nexport function shorten(s, maxLen = 25) {\n  return s.replace(new RegExp(\"^(.{\" + maxLen + \"}).*\"), \"$1...\");\n}\n","import React from \"react\";\n\nexport const CollectionsContext = React.createContext([]),\n  TopListCardContext = React.createContext({}),\n  TopSkillsContext = React.createContext({});\n","import React, { useMemo, useState } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport PlotControl from \"./plotControl\";\nimport Chart from \"./charter\";\nimport { findURLFromCollection } from \"../utils\";\nimport Selector from \"./selector\";\nimport { CollectionsContext } from \"../context\";\nimport Fetch from \"./fetcher\";\n\nconst style = theme => ({\n  root: {\n    width: \"868px\"\n  }\n});\n\nexport default function(props) {\n  return (\n    <CollectionsContext.Consumer>\n      {value => (\n        <Fetch\n          url={findURLFromCollection(value, \"bgtocc_trends\")}\n          render={(data, _) => <TrendChart jsonResp={data} />}\n        />\n      )}\n    </CollectionsContext.Consumer>\n  );\n}\n\nfunction BgtoccTrendChart({ data, layout }) {\n  const traces = useMemo(\n    function() {\n      return data.map(({ country, year, percentage }) => ({\n        name: country,\n        x: year,\n        y: percentage,\n        marker: {\n          color: country === \"Singapore\" ? \"#2C3E50\" : \"#4CA1AF\",\n          symbol: \"circle\",\n          size: 8\n        },\n        type: \"scatter\",\n        mode: \"lines+markers\"\n      }));\n    },\n    [data]\n  );\n\n  return <Chart data={traces} layout={layout} />;\n}\n\nconst TrendChart = withStyles(style)(function({ classes, jsonResp }) {\n  const [value, setValue] = useState(\n    findURLFromCollection(jsonResp._links, \"details\")\n  );\n  const options = useMemo(() => {\n    return jsonResp.data.map((item, i) => ({\n      key: i,\n      label: item.bgtocc,\n      value: value.replace(/trend\\/[\\w\\d]+/, `trend/${item.bgtocc_hash}`)\n    }));\n  }, [jsonResp, value]);\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  return (\n    <div className={classes.root}>\n      <PlotControl\n        title={\"Job Openings Trend by Occupation\"}\n        toolTipText={\n          \"Graph showing the trend of job openings for the past 5 years as a\" +\n          \" percentage of total job openings for that year\"\n        }\n      >\n        <Selector\n          TextFieldProps={{\n            helperText: \"Select occupation...\",\n            value,\n            onChange: handleChange,\n            label: \"Occupation\"\n            //style: { width: \"40%\" }\n          }}\n          options={options}\n        />\n      </PlotControl>\n      <Fetch\n        url={value}\n        render={({ data, bgtocc }, _) => (\n          <BgtoccTrendChart\n            data={data}\n            layout={{\n              width: 868,\n              height: 516,\n              title: `${bgtocc}`,\n              xaxis: {\n                title: { text: \"Year\" },\n                tickmode: \"array\",\n                tickvals: data[0].year\n              },\n              yaxis: { title: { text: \"Percentage (%)\" } },\n              legend: { orientation: \"h\", x: 0, y: -0.2 }\n            }}\n          />\n        )}\n      />\n    </div>\n  );\n});\n","import React, { useMemo, useState } from \"react\";\nimport PlotControl from \"./plotControl\";\nimport Chart from \"./charter\";\nimport Selector from \"./selector\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport * as chroma from \"chroma-js\";\nimport { CollectionsContext } from \"../context\";\nimport Fetch from \"./fetcher\";\nimport { findURLFromCollection } from \"../utils\";\n\nconst style = theme => ({ root: { width: \"1200px\" } });\n\nconst EmployersChart = ({ jsonResp, refetch, classes }) => {\n  const [value, setValue] = useState(\n    findURLFromCollection(jsonResp._links, \"self\")\n  );\n  const options = useMemo(\n    () =>\n      jsonResp.args.limit.map((item, i) => ({\n        key: i,\n        value: value.replace(/limit=\\d+/, `limit=${item}`),\n        label: item\n      })),\n    [jsonResp, value]\n  );\n\n  const handleChange = e => {\n    setValue(e.target.value);\n    refetch({ url: e.target.value });\n  };\n  const traces = useMemo(\n    function() {\n      const markerColors = chroma.scale([\"2C3E50\", \"4CA1AF\"]).colors(3);\n\n      return jsonResp.data.map(({ Employer, job_postings, year }, i) => ({\n        name: year,\n        y: Employer,\n        x: job_postings,\n        type: \"bar\",\n        orientation: \"h\",\n        marker: { color: markerColors[i] }\n      }));\n    },\n    [jsonResp]\n  );\n\n  return (\n    <div className={classes.root}>\n      <PlotControl\n        title={`Top ${jsonResp.limit} employers for ${jsonResp.sector} sector`}\n        toolTipText={\n          \"Graph showing total number advertised job postings from companies or \" +\n          \"organizations in Singapore for the past three years.\"\n        }\n      >\n        <Selector\n          TextFieldProps={{\n            helperText: \"Select number of employers...\",\n            value,\n            onChange: handleChange,\n            label: \"Top employers\"\n            //style: { width: \"20%\" }\n          }}\n          options={options}\n        />{\" \"}\n      </PlotControl>\n      <Chart\n        data={traces}\n        layout={{\n          width: 1200,\n          height: 516,\n          title: `Top ${jsonResp.limit} Employers`,\n          xaxis: {\n            title: { text: \"Number of job postings\" }\n          },\n          yaxis: {\n            tickfont: { size: 10 },\n            categoryorder: \"array\",\n            categoryarray: jsonResp.category_array.reverse()\n          },\n          barmode: \"stack\",\n          margin: { l: 300 },\n          legend: { orientation: \"h\", x: 0, y: -0.2 }\n        }}\n      />\n    </div>\n  );\n};\n\nconst StyledEmployersChart = withStyles(style)(EmployersChart);\n\nexport default function(props) {\n  return (\n    <CollectionsContext.Consumer>\n      {value => (\n        <Fetch\n          url={findURLFromCollection(value, \"employers\")}\n          render={(data, refetch) => (\n            <StyledEmployersChart jsonResp={data} refetch={refetch} />\n          )}\n        />\n      )}\n    </CollectionsContext.Consumer>\n  );\n}\n","import React, { useMemo, useState } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport PlotControl from \"./plotControl\";\nimport Chart from \"./charter\";\nimport * as chroma from \"chroma-js\";\nimport Selector from \"./selector\";\nimport Fetch from \"./fetcher\";\nimport { CollectionsContext } from \"../context\";\nimport { findURLFromCollection } from \"../utils\";\n\nconst style = { root: { width: \"1200px\" } };\n\nconst EducationChart = ({ jsonResp, refetch, classes }) => {\n  const [value, setValue] = useState(\n    findURLFromCollection(jsonResp._links, \"self\")\n  );\n  const options = useMemo(\n    () =>\n      jsonResp.args.year.map((item, i) => ({\n        key: i,\n        label: item,\n        value: value.replace(/year=[\\w\\d]+/, `year=${item}`)\n      })),\n    [jsonResp, value]\n  );\n\n  const handleChange = e => {\n    setValue(e.target.value);\n    refetch({ url: e.target.value });\n  };\n  const traces = useMemo(\n    function() {\n      const markerColors = chroma.scale([\"2C3E50\", \"4CA1AF\"]).colors(5);\n\n      return jsonResp.data.map(({ Education, Experience, num_of_jobs }, i) => ({\n        name: Experience,\n        x: num_of_jobs,\n        y: Education,\n        marker: { color: markerColors[i] },\n        type: \"bar\",\n        orientation: \"h\"\n      }));\n    },\n    [jsonResp]\n  );\n\n  return (\n    <div className={classes.root}>\n      <PlotControl\n        title={`Education requirements and experience for ${\n          jsonResp.sector\n        } sector`}\n        toolTipText={\n          \"Graph showing break down of jobs available for level of education \" +\n          \"and minumim experience required\"\n        }\n      >\n        <Selector\n          TextFieldProps={{\n            helperText: \"Select year...\",\n            value,\n            onChange: handleChange,\n            label: \"Year\"\n            //style: { width: \"20%\" }\n          }}\n          options={options.reverse()}\n        />\n      </PlotControl>\n      <Chart\n        data={traces}\n        layout={{\n          width: 1200,\n          height: 516,\n          title: \"Education and experience\",\n          xaxis: {\n            title: { text: \"Number of job postings\" }\n          },\n          yaxis: {\n            categoryorder: \"array\",\n            categoryarray: jsonResp.category_array\n          },\n          margin: { l: 300 },\n          barmode: \"stack\",\n          legend: { orientation: \"h\", x: 0, y: -0.2 }\n        }}\n      />\n    </div>\n  );\n};\n\nconst StyledEducationChart = withStyles(style)(EducationChart);\n\nexport default function(props) {\n  return (\n    <CollectionsContext.Consumer>\n      {value => (\n        <Fetch\n          url={findURLFromCollection(value, \"education\")}\n          render={(data, refetch) => (\n            <StyledEducationChart jsonResp={data} refetch={refetch} />\n          )}\n        />\n      )}\n    </CollectionsContext.Consumer>\n  );\n}\n","import React from \"react\";\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  Divider\n} from \"@material-ui/core\";\nimport Tooltip from \"./toolTip\";\n\nexport default function({ data, ...props }) {\n  return (\n    <List dense={true}>\n      {data.map(item => (\n        <React.Fragment key={item.rank}>\n          <Tooltip\n            title={\n              <>\n                <Typography variant=\"subtitle2\">{item.name}</Typography>\n                <Divider />\n                {item.description === \"\"\n                  ? \"No description available\"\n                  : item.description}\n              </>\n            }\n          >\n            <ListItem\n              alignItems=\"flex-start\"\n              divider={true}\n              style={{ height: \"35px\" }}\n            >\n              <ListItemText\n                primary={`${item.rank}. ${item.name}`}\n                primaryTypographyProps={{\n                  noWrap: true,\n                  variant: \"body2\",\n                  gutterBottom: true\n                }}\n              />\n            </ListItem>\n          </Tooltip>\n        </React.Fragment>\n      ))}\n    </List>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  Paper,\n  Typography,\n  withStyles,\n  Button,\n  Dialog\n} from \"@material-ui/core\";\nimport CardList from \"./cardList\";\nimport { TopListCardContext } from \"../context\";\n\nconst styles = theme => ({\n  root: {\n    height: \"250px\",\n    width: \"320px\",\n    marginBottom: theme.spacing.unit * 2,\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  headline: {\n    paddingLeft: \"0.5rem\",\n    paddingTop: \"0.5rem\"\n  },\n  button: {\n    display: \"flex\",\n    flexDirection: \"row-reverse\"\n  },\n  label: {\n    textTransform: \"none\"\n  },\n  list: {\n    flexBasis: \"60%\"\n  }\n});\n\nfunction TopListCard({ classes, cardTitle, data, renderMore, ...props }) {\n  const [open, setOpen] = useState(false);\n  return (\n    <div>\n      <Paper className={classes.root} elevation={2}>\n        <Typography className={classes.headline} variant=\"subtitle2\">\n          {cardTitle}\n        </Typography>\n        <CardList data={data} />\n        {renderMore && (\n          <TopListCardContext.Consumer>\n            {seeMoreURL => (\n              <div className={classes.button}>\n                <Button\n                  color=\"primary\"\n                  classes={{ label: classes.label }}\n                  onClick={() => setOpen(true)}\n                >\n                  See more\n                </Button>\n                <Dialog\n                  open={open}\n                  onClose={() => setOpen(false)}\n                  maxWidth=\"sm\"\n                >\n                  {renderMore(seeMoreURL)}\n                </Dialog>\n              </div>\n            )}\n          </TopListCardContext.Consumer>\n        )}\n      </Paper>\n    </div>\n  );\n}\n\nexport default withStyles(styles)(TopListCard);\n","import React from \"react\";\nimport { DialogContent, DialogTitle, Typography } from \"@material-ui/core\";\nimport CardList from \"./cardList\";\n\nexport default ({ jsonResp, country, modalTitle }) => {\n  const { data, limit } = jsonResp;\n  return (\n    <DialogContent>\n      <DialogTitle disableTypography={true}>\n        <Typography variant=\"subtitle2\" align=\"center\">\n          {modalTitle(limit)}\n        </Typography>\n      </DialogTitle>\n      <CardList data={data.filter(i => i.country === country)} />\n    </DialogContent>\n  );\n};\n","import React, { useMemo, useState } from \"react\";\nimport { withStyles } from \"@material-ui/core\";\nimport PlotControl from \"./plotControl\";\nimport Selector from \"./selector\";\nimport TopListCard from \"./topListCard\";\nimport { TopListCardContext } from \"../context\";\nimport { groupByAndChunk, findURLFromCollection } from \"../utils\";\nimport Fetch from \"./fetcher\";\nimport SeeMoreModal from \"./modal\";\n\nconst style = theme => ({\n  root: {\n    width: \"320px\"\n  }\n});\n\nconst TopList = withStyles(style)(\n  ({ jsonResp, refetch, fieldName, ...props }) => {\n    console.log(jsonResp);\n\n    const { sector, _links, args, data, limit } = jsonResp;\n    const [value, setValue] = useState(findURLFromCollection(_links, \"self\"));\n    const {\n      year,\n      limit: [_, limitMore]\n    } = args;\n\n    const options = useMemo(() => {\n      return year.map((y, i) => ({\n        key: i,\n        value: value.replace(/year=[\\w\\d]+/, `year=${y}`),\n        label: y !== 9999 ? y : \"All\"\n      }));\n    }, [year, value]);\n\n    const handleChange = e => {\n      setValue(e.target.value);\n      refetch({ url: e.target.value });\n    };\n\n    return (\n      <div className={props.classes.root}>\n        <PlotControl\n          title={`Top ${fieldName}`}\n          toolTipText={`Top ${limit} most requested skills in the ${sector} sector`}\n        >\n          <Selector\n            TextFieldProps={{\n              helperText: \"Select year..\",\n              value,\n              onChange: handleChange,\n              label: \"Year\"\n            }}\n            options={options}\n          />\n        </PlotControl>\n        <TopListCardContext.Provider\n          value={value.replace(/limit=\\d+/, `limit=${limitMore}`)}\n        >\n          {groupByAndChunk(data, \"country\").map(([country, dataChunk], i) => (\n            <TopListCard\n              key={i}\n              data={dataChunk}\n              cardTitle={`Top ${limit} ${fieldName} in ${country}`}\n              renderMore={seeMoreUrl => (\n                <Fetch\n                  url={seeMoreUrl}\n                  render={(data, _) => (\n                    <SeeMoreModal\n                      jsonResp={data}\n                      country={country}\n                      modalTitle={limit =>\n                        `Top ${limit} ${fieldName} in ${country}`\n                      }\n                    />\n                  )}\n                />\n              )}\n            />\n          ))}\n        </TopListCardContext.Provider>\n      </div>\n    );\n  }\n);\n\nexport default TopList;\n","import React from \"react\";\nimport { CollectionsContext } from \"../context\";\nimport { findURLFromCollection } from \"../utils\";\nimport Fetch from \"./fetcher\";\nimport TopList from \"./topList\";\n\nexport default function(props) {\n  return (\n    <CollectionsContext.Consumer>\n      {value => (\n        <Fetch\n          url={findURLFromCollection(value, \"top_bgtoccs\")}\n          render={(data, refetch) => (\n            <TopList\n              jsonResp={data}\n              refetch={refetch}\n              fieldName={\"occupations\"}\n            />\n          )}\n        />\n      )}\n    </CollectionsContext.Consumer>\n  );\n}\n","import React from \"react\";\nimport { CollectionsContext } from \"../context\";\nimport { findURLFromCollection } from \"../utils\";\nimport Fetch from \"./fetcher\";\nimport TopList from \"./topList\";\n\nexport default function(props) {\n  return (\n    <CollectionsContext.Consumer>\n      {value => (\n        <Fetch\n          url={findURLFromCollection(value, \"top_skills\")}\n          render={(data, refetch) => (\n            <TopList jsonResp={data} refetch={refetch} fieldName={\"skills\"} />\n          )}\n        />\n      )}\n    </CollectionsContext.Consumer>\n  );\n}\n","import React, { useEffect, useState, useMemo } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Chart from \"./charter\";\nimport PlotControl from \"./plotControl\";\nimport Selector from \"./selector\";\nimport chroma from \"chroma-js\";\nimport { range, findURLFromCollection } from \"../utils\";\nimport { CollectionsContext } from \"../context\";\nimport Fetch from \"./fetcher\";\n\nconst style = { root: { width: \"868px\" } };\nconst markerColors = [\n  ...chroma.scale([\"2C3E50\", \"4CA1AF\"]).colors(5),\n  ...chroma.scale([\"8856a7\", \"9ebcda\"]).colors(5)\n];\n\nconst SkillRank = ({ jsonResp, refetch, classes }) => {\n  const [value, setValue] = useState(\n    findURLFromCollection(jsonResp._links, \"self\")\n  );\n  const [layout, setLayout] = useState({});\n\n  const options = useMemo(\n    () =>\n      jsonResp.args.base_year.map((item, i) => ({\n        key: i,\n        label: item === 9999 ? \"All\" : item,\n        value: value.replace(/base_year=[\\w\\d]+/, `base_year=${item}`)\n      })),\n    [value, jsonResp]\n  );\n\n  const handleChange = e => {\n    setValue(e.target.value);\n    refetch({ url: e.target.value });\n  };\n\n  const traces = useMemo(\n    () =>\n      jsonResp.data.map(({ name, value, year, country }, i) => {\n        let draftTrace = {\n          name,\n          x: year,\n          y: value,\n          type: \"scatter\",\n          mode: \"lines+markers\",\n          marker: { color: markerColors[i] },\n          legendgroup: country\n        };\n        if (country === \"United States\") {\n          return { ...draftTrace, xaxis: \"x2\", yaxis: \"y2\" };\n        }\n        return draftTrace;\n      }),\n    [jsonResp]\n  );\n\n  useEffect(() => {\n    const yaxis2 = {\n      showgrid: false,\n      showline: false,\n      // showticklabels: false,\n      ticks: \"\",\n      autorange: \"reversed\",\n      rangemode: \"tozero\",\n      zerolinecolor: \"white\"\n      // tickmode: \"array\",\n      // tickvals: Array(10)\n      //   .fill(1)\n      //   .map((n, i) => n + i)\n    };\n    const xaxis = {\n      tickmode: \"array\",\n      tickvals: range(2016, 2019),\n      title: \"Singapore\"\n    };\n    const xaxis2 = { ...xaxis, title: \"United States\" };\n    let draftLayout = {\n      width: 868,\n      height: 516,\n      title: \"Trends in skill demand\",\n      legend: {\n        orientation: \"h\",\n        x: 0.25,\n        y: -0.25,\n        tracegroupgap: 5,\n        // traceorder: \"grouped\",\n        font: { size: 10 }\n        // yanchor: \"bottom\"\n      },\n      grid: {\n        rows: 1,\n        columns: 2,\n        pattern: \"independent\"\n      },\n      yaxis: { title: jsonResp.value_field },\n      xaxis,\n      xaxis2\n    };\n    draftLayout =\n      jsonResp.value_field === \"Rank\"\n        ? {\n            ...draftLayout,\n            yaxis2,\n            yaxis: Object.assign(draftLayout.yaxis, yaxis2)\n          }\n        : draftLayout;\n\n    setLayout(draftLayout);\n  }, [jsonResp]);\n\n  return (\n    <div className={classes.root}>\n      <PlotControl\n        title={\"Skill demand trends\"}\n        toolTipText={`Graph showing the change in ${\n          jsonResp.value_field !== \"Rank\" ? \"absolute\" : \"ranked\"\n        } job postings for skills for the past 3 years.`}\n      >\n        <Selector\n          TextFieldProps={{\n            helperText: \"Select year...\",\n            value,\n            onChange: handleChange,\n            label: \"Year\"\n          }}\n          options={options}\n        />\n      </PlotControl>\n      <Chart data={traces} layout={layout} />\n    </div>\n  );\n};\n\nconst StyledSkillRank = withStyles(style)(SkillRank);\n\nexport default function(props) {\n  return (\n    <CollectionsContext.Consumer>\n      {value => (\n        <Fetch\n          url={findURLFromCollection(value, \"skill_trends\")}\n          render={(data, refetch) => (\n            <StyledSkillRank jsonResp={data} refetch={refetch} />\n          )}\n        />\n      )}\n    </CollectionsContext.Consumer>\n  );\n}\n","import React, { useEffect, useState, useMemo } from \"react\";\nimport { withStyles } from \"@material-ui/core\";\nimport PlotControl from \"./plotControl\";\nimport Chart from \"./charter\";\nimport Selector from \"./selector\";\nimport chroma from \"chroma-js\";\nimport { findURLFromCollection } from \"../utils\";\nimport { CollectionsContext } from \"../context\";\nimport Fetch from \"./fetcher\";\n\nconst markerColors = chroma.scale([\"2C3E50\", \"4CA1AF\"]).colors(3);\n\nconst style = theme => ({\n  root: { width: \"1200px\" },\n  inputContainer: {\n    marginLeft: \"auto\",\n    display: \"flex\"\n  },\n  dropDown: {\n    marginTop: theme.spacing.unit * 2,\n    marginLeft: theme.spacing.unit * 2\n    // paddingBottom: \"10px\"\n  }\n});\n\nfunction SkillCompositionChart({ data }) {\n  const traces = useMemo(\n    () =>\n      data.data.map(({ country, job_postings_skill, skill_name, year }) => {\n        let draftTrace = {\n          name: year,\n          x: job_postings_skill,\n          y: skill_name,\n          marker: { color: markerColors[year - 2016] },\n          type: \"bar\",\n          orientation: \"h\"\n        };\n        if (country === \"United States\") {\n          return { ...draftTrace, xaxis: \"x2\", yaxis: \"y2\" };\n        }\n        return draftTrace;\n      }),\n    [data]\n  );\n  const groupBy = require(\"lodash.groupby\");\n  const arrangement = groupBy(data.category_array, \"country\");\n\n  const flatMap = require(\"lodash.flatmap\");\n\n  return (\n    <Chart\n      data={traces}\n      layout={{\n        width: 1200,\n        height: 516,\n        title: `Occupational skill requirements for ${data.bgtocc}`,\n        xaxis: {\n          title: { text: \"Singapore\" },\n          domain: [0, 0.35]\n        },\n        xaxis2: { title: { text: \"United States\" }, domain: [0.65, 1] },\n        barmode: \"stack\",\n        legend: {\n          orientation: \"h\",\n          x: 0,\n          y: -0.2\n          //traceorder: \"reversed\"\n        },\n        grid: {\n          rows: 1,\n          columns: 2,\n          pattern: \"independent\"\n        },\n        yaxis: {\n          categoryorder: \"array\",\n          categoryarray: flatMap(\n            arrangement[\"Singapore\"],\n            \"skill_name\"\n          ).reverse(),\n          tickfont: { size: 10 }\n        },\n        yaxis2: {\n          categoryorder: \"array\",\n          categoryarray: flatMap(\n            arrangement[\"United States\"],\n            \"skill_name\"\n          ).reverse(),\n          tickfont: { size: 10 }\n        },\n        margin: { l: 250 }\n      }}\n    />\n  );\n}\n\nfunction SkillComposition({ jsonResp, refetch, classes }) {\n  const [value, setValue] = useState(\n    findURLFromCollection(jsonResp._links, \"details\")\n  );\n\n  const [bgtoccValue, setBgtoccValue] = useState(\n    jsonResp.data[0].bgtocc_name_hash\n  );\n  const [skillTypeValue, setSkillTypeValue] = useState(\n    jsonResp.args.skill_types[0]\n  );\n  const [limitValue, setLimitValue] = useState(jsonResp.args.limit[0]);\n\n  const bgtoccOptions = useMemo(\n    () =>\n      jsonResp.data.map(({ bgtocc_name_hash, bgtocc }, i) => ({\n        value: bgtocc_name_hash,\n        label: bgtocc,\n        key: i\n      })),\n    [jsonResp]\n  );\n\n  const skillTypeOptions = useMemo(\n    () =>\n      jsonResp.args.skill_types.map((skill_type, i) => ({\n        key: i,\n        label: skill_type,\n        value: skill_type\n      })),\n    [jsonResp]\n  );\n\n  const limitOptions = useMemo(\n    () =>\n      jsonResp.args.limit.map((lim, i) => ({\n        key: i,\n        label: lim,\n        value: lim\n      })),\n    [jsonResp]\n  );\n\n  useEffect(() => {\n    setValue(\n      value.replace(\n        /\\/bgtocc\\/.+\\?limit=\\d+&skill_type=\\w+/,\n        `/bgtocc/${bgtoccValue}?limit=${limitValue}&skill_type=${skillTypeValue}`\n      )\n    );\n  }, [bgtoccValue, skillTypeValue, limitValue, value]);\n\n  return (\n    <div className={classes.root}>\n      <PlotControl\n        title={`Occupational skill requirements`}\n        toolTipText={\n          \"Comparison between skill requirements \" +\n          \"for occupations in the United States \" +\n          \"and Singapore\"\n        }\n      >\n        <div className={classes.inputContainer}>\n          <Selector\n            TextFieldProps={{\n              helperText: \"Select occupation...\",\n              value: bgtoccValue,\n              onChange: e => {\n                setBgtoccValue(e.target.value);\n              },\n              label: \"Occupation\",\n              classes: { root: classes.dropDown }\n            }}\n            options={bgtoccOptions}\n          />\n          <Selector\n            TextFieldProps={{\n              helperText: \"Select skill type...\",\n              value: skillTypeValue,\n              onChange: e => {\n                setSkillTypeValue(e.target.value);\n              },\n              label: \"Type of skill\",\n              classes: { root: classes.dropDown }\n            }}\n            options={skillTypeOptions}\n          />\n          <Selector\n            TextFieldProps={{\n              helperText: \"Select number...\",\n              value: limitValue,\n              onChange: e => {\n                setLimitValue(e.target.value);\n              },\n              label: \"Top n skills\",\n              classes: { root: classes.dropDown }\n            }}\n            options={limitOptions}\n          />\n        </div>\n      </PlotControl>\n      <Fetch\n        url={value}\n        render={(data, _) => <SkillCompositionChart data={data} />}\n      />\n    </div>\n  );\n}\n\nconst StyledSkillComposition = withStyles(style)(SkillComposition);\n\nexport default function(props) {\n  return (\n    <CollectionsContext.Consumer>\n      {value => (\n        <Fetch\n          url={findURLFromCollection(value, \"bgtocc_collection\")}\n          render={(data, refetch) => (\n            <StyledSkillComposition jsonResp={data} refetch={refetch} />\n          )}\n        />\n      )}\n    </CollectionsContext.Consumer>\n  );\n}\n","import React, { useMemo } from \"react\";\nimport { withStyles } from \"@material-ui/core\";\nimport Fetch from \"./fetcher\";\nimport Chart from \"./charter\";\nimport PlotControl from \"./plotControl\";\n\nconst style = { root: { width: \"590px\" }, padding: { height: \"4.3rem\" } };\n\nfunction ClusterChart({ jsonResp: { data }, classes }) {\n  const info = useMemo(() => {\n    const zip = require(\"lodash.zip\");\n    return zip(data.label, data.prevalence).map(\n      ([label, size]) =>\n        `Cluster ${label}<br> Prevalence: ${Math.round(size * 100) /\n          100} <extra></extra>`\n    );\n  }, [data]);\n  return (\n    <div className={classes.root}>\n      <PlotControl\n        title={\"Cluster distribution\"}\n        toolTipText={\n          \"Distribution of basic skill set clusters. Individual jobs are a \" +\n          \"combination of one or more of such clusters.\" +\n          \" The closer the clusters are to each other, the more similar there are \" +\n          \" in the sense that some of the skills they contain are distributed similiarly \" +\n          \" to another set of skills from the other cluster.\"\n        }\n      >\n        <div className={classes.padding} />\n      </PlotControl>\n      <Chart\n        data={[\n          {\n            x: data.component_1,\n            y: data.component_2,\n            name: \"Skill clusters\",\n            mode: \"markers+text\",\n            text: data.label.map(i => `Cluster ${i}`),\n            textposition: \"bottom center\",\n            marker: {\n              size: data.prevalence,\n              sizemode: \"area\",\n              sizeref: 0.035\n            },\n            hovertemplate: info,\n            textfont: { size: 8 }\n          }\n        ]}\n        layout={{\n          width: 590,\n          height: 516,\n          title: \"Skill Cluster Similiarity Map\",\n          hovermode: \"closest\",\n          xaxis: { color: \"white\" },\n          yaxis: { color: \"white\" }\n        }}\n      />\n    </div>\n  );\n}\n\nconst StyledClusterChart = withStyles(style)(ClusterChart);\n\nexport default function(props) {\n  return (\n    <Fetch\n      url={\"/api/v2/cluster\"}\n      render={(data, _) => <StyledClusterChart jsonResp={data} />}\n    />\n  );\n}\n","import React, { useMemo, useEffect, useState } from \"react\";\nimport { withStyles } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Fetch from \"./fetcher\";\nimport { findURLFromCollection } from \"../utils\";\nimport PlotControl from \"./plotControl\";\nimport Slider from \"@material-ui/lab/Slider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Chart from \"./charter\";\nimport { shorten } from \"../utils\";\n\nconst style = theme => ({\n  root: { width: \"590px\" },\n  inputField: { marginRight: theme.spacing(2), marginLeft: \"auto\" },\n  sliderLabel: { color: \"gray\" },\n  sliderSpacing: { marginBottom: theme.spacing(4) }\n});\n\nfunction ClusterComposition({\n  classes,\n  jsonResp: {\n    _links,\n    data: { label }\n  }\n}) {\n  const [url, setURL] = useState(findURLFromCollection(_links, \"details\"));\n  const [clusterLabel, setClusterLabel] = useState(0);\n  const [lambda, setLambda] = useState(0.6);\n\n  useEffect(() => {\n    setURL(\n      url.replace(\n        /cluster\\/\\d+\\?l_=[\\d.]+/,\n        `cluster/${clusterLabel}?l_=${lambda}`\n      )\n    );\n  }, [clusterLabel, lambda, url]);\n\n  const handleClusterLabelChange = e => {\n    setClusterLabel(Math.min(Math.max(...label), Math.max(0, e.target.value)));\n  };\n  return (\n    <div className={classes.root}>\n      <PlotControl\n        title={\"Cluster skill composition\"}\n        toolTipText={\n          \"Bar chart shows the key skills that describe the cluster. \" +\n          \"Move the slider to adjust the relevance level of the skills to the cluster.\"\n        }\n      >\n        <TextField\n          label=\"Cluster\"\n          type=\"number\"\n          value={clusterLabel}\n          onChange={handleClusterLabelChange}\n          helperText=\"Choose cluster\"\n          style={{ width: \"35%\" }}\n          classes={{ root: classes.inputField }}\n        />\n        <div>\n          <Typography\n            gutterBottom={true}\n            variant={\"caption\"}\n            classes={{\n              root: classes.sliderLabel\n              //gutterBottom: classes.sliderSpacing\n            }}\n          >\n            Relevance scale{\" \"}\n          </Typography>\n          <Slider\n            min={0}\n            max={1}\n            step={0.01}\n            defaultValue={lambda}\n            onChangeCommitted={(e, newValue) => setLambda(newValue)}\n            valueLabelDisplay={\"auto\"}\n            style={{ marginTop: \"15px\" }}\n          />\n        </div>\n      </PlotControl>\n      <Fetch\n        url={url}\n        render={(data, refetch) => (\n          <ClusterCompositionChart jsonResp={data} refetch={refetch} />\n        )}\n      />\n    </div>\n  );\n}\n\nfunction ClusterCompositionChart({ jsonResp: { data }, refetch }) {\n  const shorterName = data.name.map(i => shorten(i));\n  const traces = useMemo(\n    () => [\n      {\n        name: \"Global skill count\",\n        y: shorterName,\n        x: data.term_frequency,\n        type: \"bar\",\n        orientation: \"h\",\n        marker: { color: \"2C3E50\" }\n      },\n      {\n        name: \"Expected skill count for topic\",\n        y: shorterName,\n        x: data.pseudocount,\n        type: \"bar\",\n        orientation: \"h\",\n        marker: { color: \"4CA1AF\" }\n      }\n    ],\n    [data, shorterName]\n  );\n\n  const layout = {\n    width: 580,\n    height: 516,\n    title: \"Skill composition of cluster\",\n    barmode: \"group\",\n    yaxis: {\n      tickfont: { size: 11 },\n      categoryorder: \"array\",\n      categoryarray: shorterName.reverse()\n    },\n    margin: { l: 200 },\n    legend: { orientation: \"h\", x: 0, y: -0.2 }\n  };\n  return <Chart data={traces} layout={layout} />;\n}\n\nconst StyledClusterComposition = withStyles(style)(ClusterComposition);\n\nexport default function(props) {\n  return (\n    <Fetch\n      url={\"/api/v2/cluster\"}\n      render={data => <StyledClusterComposition jsonResp={data} />}\n    />\n  );\n}\n","import React, { useMemo } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Fetch from \"./fetcher\";\nimport { CollectionsContext } from \"../context\";\nimport { findURLFromCollection } from \"../utils\";\nimport Chart from \"./charter\";\nimport PlotControl from \"./plotControl\";\n\nconst style = { root: { width: \"1200px\" } };\n\nfunction RadarChart({ jsonResp: { data } }) {\n  const traces = useMemo(\n    () => [\n      {\n        type: \"bar\",\n        x: data.cluster_label,\n        y: data.probability,\n        marker: { color: \"4CA1AF\" }\n      }\n    ],\n    [data]\n  );\n  return (\n    <React.Fragment>\n      <PlotControl\n        title={\"Cluster importances within sector\"}\n        toolTipText={\n          \"Bar chart shows the importance in terms of estimated percentage\" +\n          \" of jobs a cluster has to this sector. The higher the bar, the more likely \" +\n          \"we are to find jobs requiring such skill sets for this sector.\"\n        }\n      />\n      <Chart\n        data={traces}\n        layout={{\n          title: \"Cluster importance\",\n          width: 1200,\n          height: 400,\n          yaxis: { title: \"Probability\" },\n          xaxis: {\n            title: \"Cluster Label\",\n            type: \"category\",\n            tickmode: \"array\",\n            tickvals: data.cluster_label\n          }\n        }}\n      />{\" \"}\n    </React.Fragment>\n  );\n}\n\nconst StyledRadarChart = withStyles(style)(RadarChart);\n\nexport default function(props) {\n  return (\n    <CollectionsContext.Consumer>\n      {value => (\n        <Fetch\n          url={findURLFromCollection(value, \"centroid\")}\n          render={(data, refetch) => <StyledRadarChart jsonResp={data} />}\n        />\n      )}\n    </CollectionsContext.Consumer>\n  );\n}\n","import React, { useState } from \"react\";\nimport { RowLayout, Layout } from \"./layout\";\nimport TrendChart from \"./trendChart\";\nimport EmployerChart from \"./employerChart\";\nimport EducationChart from \"./educationChart\";\nimport TopOccupations from \"./topOccupations\";\nimport TopSkills from \"./topSkills\";\nimport SkillRankTrend from \"./skillRankTrend\";\nimport SkillComposition from \"./skillComposition\";\nimport { withStyles, AppBar, Tabs, Tab } from \"@material-ui/core\";\nimport ClusterChart from \"./clusterChart\";\nimport ClusterComposition from \"./clusterComposition\";\nimport RadarChart from \"./radarChart\";\n\nconst style = {};\n\nfunction ChartLayout(props) {\n  const [tab, setTab] = useState(0);\n\n  return (\n    <>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={tab}\n          onChange={(event, newValue) => setTab(newValue)}\n          centered\n        >\n          <Tab label=\"Clusters\" />\n          <Tab label=\"Skills\" />\n          <Tab label=\"Occupations\" />\n        </Tabs>\n      </AppBar>\n      {tab === 1 && (\n        <Layout>\n          <RowLayout>\n            <TopSkills />\n            <SkillRankTrend />\n          </RowLayout>\n          <SkillComposition />\n        </Layout>\n      )}\n      {tab === 2 && (\n        <Layout>\n          <RowLayout>\n            <TopOccupations />\n            <TrendChart />\n          </RowLayout>\n          <EmployerChart />\n          <EducationChart />\n        </Layout>\n      )}\n      {tab === 0 && (\n        <Layout>\n          <RadarChart />\n          <RowLayout>\n            <ClusterChart />\n            <ClusterComposition />\n          </RowLayout>\n          <div />\n        </Layout>\n      )}\n    </>\n  );\n}\n\nexport default withStyles(style)(ChartLayout);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport ToolBar from \"@material-ui/core/ToolBar\";\nimport Button from \"@material-ui/core/Button\";\nconst useStyles = makeStyles(theme => ({\n  root: { flexGrow: 1 },\n  icon: { flexGrow: 1 },\n  brand: { marginRight: theme.spacing(2) },\n  button: { marginRight: theme.spacing(1) }\n}));\n\nfunction Navigation(props) {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <ToolBar variant=\"dense\">\n          <i className={classes.icon}>\n            <img\n              src=\"/assets/product-logo@3x.png\"\n              alt=\"brand\"\n              width=\"25%\"\n              className={classes.brand}\n            />\n          </i>\n          <Button color=\"inherit\" className={classes.button} href=\"/\">\n            {\" \"}\n            Home{\" \"}\n          </Button>\n          <Button color=\"inherit\" className={classes.button} href=\"/about.html\">\n            {\" \"}\n            About{\" \"}\n          </Button>\n          <Button\n            color=\"inherit\"\n            className={classes.button}\n            href=\"/feedback.html\"\n          >\n            {\" \"}\n            Feedback{\" \"}\n          </Button>\n        </ToolBar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default Navigation;\n","import React, { useState, useMemo } from \"react\";\nimport { Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Layout } from \"./components/layout\";\nimport SelectSector from \"./components/selector\";\nimport Fetch from \"./components/fetcher\";\nimport ChartLayout from \"./components/chartLayout\";\nimport { CollectionsContext } from \"./context\";\nimport { findURLFromCollection } from \"./utils\";\nimport Navigation from \"./components/navBar\";\nimport \"./app.styles.css\";\n\nconst useStyles = makeStyles(theme => ({\n  sectorTitle: { marginBottom: theme.spacing(2) }\n}));\nconst AppLayout = ({ data }) => {\n  const classes = useStyles();\n  const [value, setValue] = useState(\"\");\n  // const [options, setOptions ] = useState([])\n\n  const options = useMemo(() => {\n    let href = findURLFromCollection(data._links, \"collection\");\n    return data.data.map(({ id, sector }) => ({\n      key: id,\n      label: sector,\n      value: href.replace(/\\/\\d+/, `/${id}`)\n    }));\n  }, [data]);\n\n  return (\n    <React.Fragment>\n      <Navigation />\n      <Layout>\n        <SelectSector\n          TextFieldProps={{\n            style: { width: \"480px\" },\n            label: \"Sectors\",\n            helperText: \"Select sector...\",\n            onChange: e => {\n              setValue(e.target.value);\n            },\n            value\n          }}\n          options={options}\n        />\n        {value !== \"\" && (\n          <Fetch\n            url={value}\n            render={({ sector, _links: { collections } }, _) => (\n              <CollectionsContext.Provider value={collections}>\n                <Typography\n                  variant=\"h5\"\n                  align=\"center\"\n                  className={classes.sectorTitle}\n                >\n                  {sector}\n                </Typography>\n                <ChartLayout />\n              </CollectionsContext.Provider>\n            )}\n          />\n        )}\n      </Layout>\n    </React.Fragment>\n  );\n};\n\nconst App = props => {\n  return (\n    <Fetch\n      url={\"/api/v2/sector\"}\n      render={(data, _) => <AppLayout data={data} />}\n    />\n  );\n};\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}